{"version":3,"sources":["Content.tsx","Tabs.tsx","App.tsx","index.tsx"],"names":["Content","content","className","Tabs","tabs","selectedId","onTabSelected","onClick","onKeyDown","role","tabIndex","map","tab","id","title","find","App","state","event","target","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0QAOaA,EAA2B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzC,OACE,qBAAKC,UAAU,UAAf,SACGD,KCMME,EAAwB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACxD,OACE,qCACE,qBACEJ,UAAU,OACVK,QAASD,EACTE,UAAWF,EACXG,KAAK,SACLC,SAAU,EALZ,SAOGN,EAAKO,KAAI,SAAAC,GAAG,OACX,sBACEC,GAAID,EAAIC,GAERX,UAAWU,EAAIC,KAAOR,EAAa,eAAiB,MAHtD,SAKGO,EAAIE,OAHAF,EAAIC,SAOf,cAAC,EAAD,CAASZ,QAASG,EAAKW,MAAK,SAAAH,GAAG,OAAIA,EAAIC,KAAOR,KAAaJ,cC/B3DG,EAAc,CAClB,CAAES,GAAI,QAASC,MAAO,QAASb,QAAS,mDACxC,CAAEY,GAAI,QAASC,MAAO,QAASb,QAAS,mDACxC,CAAEY,GAAI,QAASC,MAAO,QAASb,QAAS,oDAG7Be,EAAb,4MACEC,MAAQ,CACNZ,WAAY,SAFhB,EAKEC,cAAgB,SAACY,GACXA,EAAMC,OAAON,KAAO,EAAKI,MAAMZ,YAI/Ba,EAAMC,OAAON,IACf,EAAKO,SAAS,CAAEf,WAAYa,EAAMC,OAAON,MAX/C,4CAeE,WAAU,IAAD,SACP,OACE,sBAAKX,UAAU,MAAf,UACE,+BACG,mBADH,UAEGE,EAAKW,MAAK,SAAAH,GAAG,OAAIA,EAAIC,KAAO,EAAKI,MAAMZ,qBAF1C,aAEG,EAAoDS,SAEvD,cAAC,EAAD,CAAMV,KAAMA,EAAMC,WAAYgB,KAAKJ,MAAMZ,WAAYC,cAAee,KAAKf,uBAtBjF,GAAyBgB,IAAMC,WCR/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d62cb1ab.chunk.js","sourcesContent":["import React from 'react';\nimport './Content.scss';\n\ninterface Props {\n  content: string;\n}\n\nexport const Content: React.FC<Props> = ({ content }) => {\n  return (\n    <div className=\"content\">\n      {content}\n    </div>\n  );\n};\n","import React from 'react';\nimport './Tabs.scss';\nimport { Content } from './Content';\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\ntype Props = {\n  tabs: Tab[],\n  selectedId: string,\n  onTabSelected: any,\n};\n\nexport const Tabs: React.FC<Props> = ({ tabs, selectedId, onTabSelected }) => {\n  return (\n    <>\n      <div\n        className=\"tabs\"\n        onClick={onTabSelected}\n        onKeyDown={onTabSelected}\n        role=\"button\"\n        tabIndex={0}\n      >\n        {tabs.map(tab => (\n          <span\n            id={tab.id}\n            key={tab.id}\n            className={tab.id === selectedId ? 'isActive tab' : 'tab'}\n          >\n            {tab.title}\n          </span>\n        ))}\n      </div>\n      <Content content={tabs.find(tab => tab.id === selectedId)!.content} />\n    </>\n  );\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Tabs } from './Tabs';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1 Some text 1 Some text 1 Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2 Some text 2 Some text 2 Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3 Some text 3 Some text 3 Some text 3' },\n];\n\nexport class App extends React.Component<any, any> {\n  state = {\n    selectedId: 'tab-1',\n  };\n\n  onTabSelected = (event: any) => {\n    if (event.target.id === this.state.selectedId) {\n      return;\n    }\n\n    if (event.target.id) {\n      this.setState({ selectedId: event.target.id });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          {'Selected tab is '}\n          {tabs.find(tab => tab.id === this.state.selectedId)?.title}\n        </h1>\n        <Tabs tabs={tabs} selectedId={this.state.selectedId} onTabSelected={this.onTabSelected} />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}